<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="605" library="1">
      <!--action name: Comment-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>false</canApplyTo>
      <actionType>NONE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">death handler</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if visible
{
    if place_meeting(x,y+1,obj_deadly_obstacle) &amp;&amp; !eyes_closed
    {
        instance_create(x,y,obj_player_reg_death);
        visible=false;
    }
    
    if place_meeting(x,y+1,obj_NPC1) &amp;&amp; !eyes_closed
    {
        instance_create(x,y,obj_player_reg_death);
        visible=false;
    }
    
    if !place_free(x,y+fall_speed) &amp;&amp; (fall_speed&gt;=25) &amp;&amp; !eyes_closed
    {
        move_contact_solid(270,fall_speed);
        instance_create(x,y,obj_player_fall_death);
        visible=false;
    }
}
</argument>
      </arguments>
    </action>
    <action id="605" library="1">
      <!--action name: Comment-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>false</canApplyTo>
      <actionType>NONE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">movement</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">//falling
//impose maximum falling speed
if (fall_speed&gt;max_fall_speed)
{
    fall_speed=max_fall_speed;
}
//check for and handle vertical collisions or apply vertical movement
if place_free(x,y+fall_speed)
{
    y+=fall_speed;
}
else
{
    if (fall_speed&gt;0)
    {
        move_contact_solid(270,fall_speed);
    }
    else
    {
        move_contact_solid(90,fall_speed);
    }
    fall_speed=0;
}
//apply gravity
fall_speed+=1;
//detect jump
if keyboard_check(ord('W'))||keyboard_check(vk_up)
{
    if !place_free(x,y+1)
    {
        fall_speed=jump_speed;
    }
}


//horizontal movement
//left
if keyboard_check(ord('A'))||keyboard_check(vk_left)
{
    if !keyboard_check(ord('D'))&amp;&amp;!keyboard_check(vk_right)
    {
        if move_speed&gt;-max_move_speed
            move_speed-=1;
    }
    else
    {
        if move_speed&gt;0
            move_speed-=1;
        if move_speed&lt;0
            move_speed+=1;
    }
}
//right
else if keyboard_check(ord('D'))||keyboard_check(vk_right)
{
    if move_speed&lt;max_move_speed
        move_speed+=1;
}
else
{
    if move_speed&gt;0
        move_speed-=1;
    if move_speed&lt;0
        move_speed+=1;
}

if place_free(x+move_speed,y)
{
    x+=move_speed;
}
else
{
    if move_speed&gt;0
    {
        move_contact_solid(0,move_speed);
        move_speed=0;
    }
    else
    {
        move_contact_solid(180,move_speed);
        move_speed=0;
    }
}
</argument>
      </arguments>
    </action>
    <action id="605" library="1">
      <!--action name: Comment-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>false</canApplyTo>
      <actionType>NONE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">eyes closed?</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if keyboard_check(vk_space)
    eyes_closed = true;
else
    eyes_closed = false;
</argument>
      </arguments>
    </action>
    <action id="605" library="1">
      <!--action name: Comment-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>false</canApplyTo>
      <actionType>NONE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">image controler</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">
if move_speed&gt;0
    image_xscale=1;
if move_speed&lt;0
    image_xscale=-1;
        
if place_free(x,y+1)
{
    if sprite_index=spt_player_jump_open || sprite_index=spt_player_fall_panic
    {
        if fall_speed&gt;=25
        {
            sprite_index=spt_player_fall_panic;
            image_index=0;
        }
        else if fall_speed&gt;=10
            image_index=3;
        else if fall_speed&gt;=5
            image_index=2;
        else if fall_speed&gt;=0
            image_index=1;
        else
            image_index=0;
    }
    else
    {
        sprite_index=spt_player_jump_open
        image_index=0;
    }
}
else if move_speed!=0
{
    if sprite_index=spt_player_walk_open
    {
        image_index+=.2*abs(move_speed)/7;
    }
    else
    {
        sprite_index=spt_player_walk_open
        image_index=0;
    }
}
else if ((!keyboard_check(ord('A'))&amp;&amp;!keyboard_check(vk_left))&amp;&amp;(!keyboard_check(ord('D'))&amp;&amp;!keyboard_check(vk_right)))||((keyboard_check(ord('A'))||keyboard_check(vk_left))&amp;&amp;(keyboard_check(ord('D'))||keyboard_check(vk_right)))
{
    if sprite_index=spt_player_idle_open
    {
        image_index+=.2;
    }
    else
    {
        sprite_index=spt_player_idle_open
        image_index=0;
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
